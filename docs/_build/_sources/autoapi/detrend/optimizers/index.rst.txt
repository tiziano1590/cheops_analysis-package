:py:mod:`detrend.optimizers`
============================

.. py:module:: detrend.optimizers


Module Contents
---------------

Classes
~~~~~~~

.. autoapisummary::

   detrend.optimizers.Optimizers
   detrend.optimizers.OptimizersKeplerTESS
   detrend.optimizers.OptimizersMultivisit




Attributes
~~~~~~~~~~

.. autoapisummary::

   detrend.optimizers.comm
   detrend.optimizers.size
   detrend.optimizers.rank
   detrend.optimizers.printlog
   detrend.optimizers.fig_ext


.. py:data:: comm
   

   

.. py:data:: size
   

   

.. py:data:: rank
   

   

.. py:data:: printlog
   

   

.. py:data:: fig_ext
   :annotation: = ['png', 'pdf']

   

.. py:class:: Optimizers

   Optimizers class:
   it contains al list of all the possible optimizers used for Bayesian analysis.

   The Emcee function is used for MCMC analysis and t prints the results in the most
   appropriate format for emcee.

   The Ultranest function uses Nested sampling and returns also the characteristic plots for this
   alsorithm.

   .. py:method:: emcee(self, inpars=None, dataset=None, olog=None, params_lm_loop=None, star=None)


   .. py:method:: ultranest(self, inpars=None, dataset=None, olog=None, params_lm_loop=None, star=None)



.. py:class:: OptimizersKeplerTESS

   .. py:method:: emcee(self, olog=None, dataset=None, epoch_folder=None, params_lm_loop=None, star=None, epoch_name=None, stats_lm=None, visit_args=None, star_args=None, emcee_args=None)


   .. py:method:: ultranest(self, olog=None, dataset=None, epoch_folder=None, params_lm_loop=None, star=None, epoch_name=None, stats_lm=None, visit_args=None, star_args=None, ultranest_args=None)



.. py:class:: OptimizersMultivisit

   .. py:method:: emcee(self, inpars=None, M=None, olog=None, new_params=None, T_0=None, T_ref=None, P_ref=None, log_omega0=None, log_S0=None, extra_priors=None)


   .. py:method:: ultranest(self, inpars=None, M=None, olog=None, new_params=None, T_0=None, T_ref=None, P_ref=None, log_omega0=None, log_S0=None, extra_priors=None)



